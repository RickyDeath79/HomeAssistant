---
blueprint:
  name: AWTRIX Calendar 📅️ Notifications + Indicators 🚥️
  description: >
    Monitors the state of a calendar and sets the indicator based on the status of events

    ![](https://raw.githubusercontent.com/jeeftor/HomeAssistant/master/resources/annotated_calendar.png)
  domain: automation
  input:
    awtrix:
      name: AWTRIX Device
      description: Select the Awtrix light
      selector:
        device:
          filter:
            integration: mqtt
            manufacturer: Blueforcer
            model: AWTRIX 3
          multiple: true
    calendar:
      name: Calendar
      selector:
        entity:
          filter:
            domain: calendar
    indicator:
      name: Indicator Light
      description: Which indicator light to use
      selector:
        select:
          options:
            - label: "Top Indicator (1)"
              value: "1"
            - label: Middle Light(2)
              value: "2"
            - label: Bottom Light(3)
              value: "3"

    show_next_meeting:
      name: Show upcoming meeting reminders
      description: >-
        Print out an upcoming meeting reminder/alert etc
      selector:
        boolean:
      default: false
    show_current_meeting:
      name: Display current meeting countdown
      description: >-
        Show how much time reamining in current meeting
      selector:
        boolean:
      default: false

    next_meeting_time_color:
      name: Next Meeting - Time Color
      description: Select the color for the time text for next-meeting notifications
      selector:
        color_rgb:
      default: [255, 170, 17]
    next_meeting_text_color:
      name: Next Meeting - Text Color
      description: Text (summary) of next meeting color
      selector:
        color_rgb:
      default: [170, 255, 51]
    next_meeting_separator_color:
      name: Next Meeting - Separator Color
      description: If multiple meetings occur they will be separated by a `/` character. Please select the color
      selector:
        color_rgb:
      default: [0, 255, 0]

    color_active:
      name: Activie Color
      description: Color to use when in a meeting
      selector:
        color_rgb:
      default: [255, 0, 0]
    color_active_fade:
      name: Fade Active
      description:
        Rate in `ms` that the indicator will fade. `0` disables the blinking.


        `NOTE:` If you pick FADE and BLINK something funky might happen.
      selector:
        number:
          min: 0
          max: 5000
          step: 250
          unit_of_measurement: "ms"
          mode: slider
      default: 0
    color_active_blink:
      name: Blink Active
      description:
        Rate in `ms` that the indicator will blink. `0` disables the blinking


        `NOTE:` If you pick FADE and BLINK something funky might happen.
      selector:
        number:
          min: 0
          max: 5000
          step: 250
          unit_of_measurement: "ms"
          mode: slider
      default: 0

    #----------------- Warning Sounds
    section_heading_sound:
      name: "RTTTL Selection"
      description: >

        # Sound Selection below

        Here are some sample sounds you could use:


            chime:d=3,o=5,b=160:a5
            5beeps:d=2,o=5,b=125: 8c, 8p, 8c, 8p, 8c, 8p, 8c, 8p, 8c
            StarWars/Imp:d=4,o=5,b=112:8d.,16p,8d.,16p,8d.,16p,8a#4,16p,16f,8d.,16p,8a#4,16p,16f,d.,8p,8a.,16p,8a.,16p,8a.,16p,8a#,16p,16f,8c#.,16p,8a#4,16p,16f,d.,8p,8d.6,16p,8d,16p,16d,8d6,8p,8c#6,16p,16c6,16b,16a#,8b,8p,16d#,16p,8g#,8p,8g,16p

      selector:
        boolean:
      default: false
    sound_0_min_warning:
      name: 🔊 0 Minute Warning Tone 0️⃣️
      description: >-
        Meeting start tone!!!
      selector:
        text:
      default: ""
    sound_1_min_warning:
      name: 🔊 1 Minute Warning Tone 1️⃣️
      selector:
        text:
      default: ""
    sound_5_min_warning:
      name: 🔊 5 Minute Warning Tone 5️⃣️
      selector:
        text:
      default: ""
    sound_10_min_warning:
      name: 🔊 10 Minute Warning Tone 🔟️
      selector:
        text:
      default: ""
    sound_15_min_warning:
      name: 🔊 5 Minute Warning Tone 1️⃣️5️⃣️
      selector:
        text:
      default: ""
    section_heading_color:
      name: "Indicator Selection"
      description: >

        # The following sections will allow you to customize your indicators
      selector:
        boolean:
      default: false
    #----------------- Warning Colors & Fades

    color_1_min_warning:
      name: 🎨️ 1 Minute Warning ⏰️1️⃣️
      description: Color to indiciate a 1 Minute Warning prior to meeting start
      selector:
        color_rgb:
      default: [255, 80, 0]

    color_1_min_warning_fade:
      name: Fade 1 min warning color
      description:
        Rate in `ms` that the indicator will blink. `fade` disables the blinking.


        `NOTE:` If you pick FADE and BLINK something funky might happen.
      selector:
        number:
          min: 0
          max: 5000
          step: 250
          unit_of_measurement: "ms"
          mode: slider
      default: 0
    color_1_min_warning_blink:
      name: Blink 1 min warning color
      description:
        Rate in `ms` that the indicator will blink. `0` disables the blinking


        `NOTE:` If you pick FADE and BLINK something funky might happen.
      selector:
        number:
          min: 0
          max: 5000
          step: 250
          unit_of_measurement: "ms"
          mode: slider
      default: 0

    color_5_min_warning:
      name: 🎨️ 5 minute Warning ⏰️5️⃣️
      description: Color to indiciate a 5 minute Warning prior to meeting start
      selector:
        color_rgb:
      default: [255, 125, 0]

    color_5_min_warning_fade:
      name: Fade 5 min warning color
      description:
        Rate in `ms` that the indicator will blink. `fade` disables the blinking.


        `NOTE:` If you pick FADE and BLINK something funky might happen.
      selector:
        number:
          min: 0
          max: 5000
          step: 250
          unit_of_measurement: "ms"
          mode: slider
      default: 0
    color_5_min_warning_blink:
      name: Blink 5 min warning color
      description:
        Rate in `ms` that the indicator will blink. `0` disables the blinking


        `NOTE:` If you pick FADE and BLINK something funky might happen.
      selector:
        number:
          min: 0
          max: 5000
          step: 250
          unit_of_measurement: "ms"
          mode: slider
      default: 0

    color_10_min_warning:
      name: 🎨️ 10 Minute Warning ⏰️🔟️
      description: Color to indiciate a 10 Minute Warning prior to meeting start
      selector:
        color_rgb:
      default: [255, 255, 0]
    color_10_min_warning_fade:
      name: Fade 10 min warning color
      description:
        Rate in `ms` that the indicator will blink. `fade disables the blinking.


        `NOTE:` If you pick FADE and BLINK something funky might happen.
      selector:
        number:
          min: 0
          max: 5000
          step: 250
          unit_of_measurement: "ms"
          mode: slider
      default: 0
    color_10_min_warning_blink:
      name: Blink 10 min warning color
      description:
        Rate in `ms` that the indicator will blink. `0` disables the blinking


        `NOTE:` If you pick FADE and BLINK something funky might happen.
      selector:
        number:
          min: 0
          max: 5000
          step: 250
          unit_of_measurement: "ms"
          mode: slider
      default: 0

    min_suffix:
      name: Min Suffix
      description: What shoudl we use to show Mins. Prepend a space if you want a space between number and text.
      selector:
        text:
      default: " m"
    hour_suffix:
      name: Hour Suffix
      description: What shoudl we use to show Hours. Prepend a space if you want a space between number and text.
      selector:
        text:
      default: " hr"

mode: queued
variables:
  show_next_meeting: !input show_next_meeting
  show_current_meeting: !input show_current_meeting

  color_active: !input color_active
  color_1_min_warning: !input color_1_min_warning
  color_5_min_warning: !input color_5_min_warning
  color_10_min_warning: !input color_10_min_warning

  blink_active: !input color_active_blink
  blink_1_min_warning: !input color_1_min_warning_blink
  blink_5_min_warning: !input color_5_min_warning_blink
  blink_10_min_warning: !input color_10_min_warning_blink

  fade_active: !input color_active_fade
  fade_1_min_warning: !input color_1_min_warning_fade
  fade_5_min_warning: !input color_5_min_warning_fade
  fade_10_min_warning: !input color_10_min_warning_fade

  next_meeting_time_color: !input next_meeting_time_color
  next_meeting_text_color: !input next_meeting_text_color
  next_meeting_separator_color: !input next_meeting_separator_color
  min_suffix: !input min_suffix
  hour_suffix: !input hour_suffix

  calendar: !input calendar
  cal_state: "{{states(calendar)}}"

  device_ids: !input awtrix
  light_suffix: !input indicator
  lights: >-
    {%- set ns = namespace(lights=[]) %}
    {%- for device_id in device_ids %}
      {%- set light = (device_entities(device_id) | select('search','indicator_' ~ light_suffix) | list)[0] %}
      {% set ns.lights = ns.lights + [light] %}
    {% endfor %}
    {{ ns.lights}}

  devices_topics: >-
    {%- macro get_device_topic(device_id) %}
    {{- states((device_entities(device_id) | select('search','device_topic') | list)[0]) }}
    {%- endmacro %}

    {%- set ns = namespace(devices=[]) %}
    {%- for device_id in device_ids %}
      {%- set device=get_device_topic(device_id)|replace(' ','') %}
      {% set ns.devices = ns.devices + [ device ~ '/indicator' ~ light_suffix] %}
    {%- endfor %}
    {{ ns.devices | reject('match','unavailable') | list}}

  next_meeting_base_topic: "{{calendar | replace('.','_') ~ '_next_meeting' }}"
  next_meeting_topics: >-
    {{devices_topics | regex_replace(find='indicator.', replace='custom/' ~ next_meeting_base_topic, ignorecase=False) }}
  sound_topics: >-
    {{devices_topics | regex_replace(find='indicator.', replace='rtttl', ignorecase=False) }}
  sound_0_min_warning: !input sound_0_min_warning
  sound_1_min_warning: !input sound_1_min_warning
  sound_5_min_warning: !input sound_5_min_warning
  sound_10_min_warning: !input sound_10_min_warning
  sound_15_min_warning: !input sound_15_min_warning
  sound_dict: >-
    {
      "0_min": "{{sound_0_min_warning}}",
      "1_min": "{{sound_1_min_warning}}", 
      "5_min": "{{sound_5_min_warning}}",
      "10_min": "{{sound_10_min_warning}}",
      "15_min": "{{sound_15_min_warning}}"
      }

trigger:
  - platform: time_pattern
    seconds: /5
    id: temporal
  - platform: calendar
    event: start
    offset: "-0:10:0"
    entity_id: calendar.mitre
    id: 10_min
  - platform: calendar
    event: start
    offset: "-0:5:0"
    entity_id: calendar.mitre
    id: 5_min
  - platform: calendar
    event: start
    offset: "-0:1:0"
    entity_id: calendar.mitre
    id: 1_min
  - platform: calendar
    event: start
    offset: "-0:0:1"
    entity_id: calendar.mitre
    id: 0_min

action:
  - service: calendar.get_events
    data:
      duration:
        hours: 8
        minutes: 0
        seconds: 0
    target:
      entity_id: "{{ calendar }}"
    response_variable: cal_events
  - variables:
      event_list: >
        {%- set time_period_phrases = [{'language': 'en','phrases':{  'year': ['year', 'years', 'yr'],  'month': ['month', 'months', 'mth'],  'week': ['week', 'weeks', 'wk'],  'day': ['day', 'days', 'day'],  'hour': ['hour', 'hours', 'hr'],  'minute': ['minute', 'minutes', 'min'],  'second': ['second', 'seconds', 'sec'],  'combine': ' and ',  'error': 'Incorrect date'}}]%}

        {#
          macro to split a timedelta in years, months, weeks, days, hours, minutes, seconds
          used by the relative time plus macro, set up as a separator macro so it can be reused
        #}
        {%- macro time_split(date, time, compare_date) -%}
          {# set defaults for variables #}
            {%- set date = date | as_local -%}
            {%- set time = time | default(true) | bool(true) -%}
            {%- set n = compare_date if compare_date is defined else now() -%}
            {%- set n = n if time else today_at() -%}
            {%- set a = [n, date] | max -%}
            {%- set b = [n, date] | min -%}
          {#- set time periods in seconds #}
            {%- set m, h, d, w = 60, 3600, 86400, 604800 -%}
          {#- set numer of years, and set n to value using this number of years #}
            {%- set yrs = a.year - b.year - (1 if a.replace(year=b.year) < b else 0) -%}
            {%- set a = a.replace(year=a.year - yrs) -%}
          {#- set numer of months, and set n to value using this number of months #}
            {%- set mth = (a.month - b.month - (1 if a.day < b.day else 0) + 12) % 12 -%}
            {%- set month_new = (((a.month - mth) + 12) % 12) | default(12, true) -%}
            {%- set day_max = ((a.replace(day=1, month=month_new) + timedelta(days=31)).replace(day=1) - timedelta(days=1)).day -%}
            {%- set a_temp = a.replace(month=month_new, day=[a.day, day_max]|min) -%}
            {%- set a = a_temp if a_temp <= a else a_temp.replace(year=a.year-1) -%}
          {#- set other time period variables #}
            {%- set s = (a - b).total_seconds() -%}
            {%- set wks = (s // w) | int -%}
            {%- set day = ((s - wks * w) // d) | int -%}
            {%- set hrs = ((s - wks * w - day * d) // h) | int -%}
            {%- set min = ((s - wks * w - day * d - hrs * h) // m) | int -%}
            {%- set sec = (s - wks * w - day * d - hrs * h - min * m) | int -%}
          {# output result #}
            {{- dict(y=yrs, mo=mth, w=wks, d=day, h=hrs, m=min, s=sec) | to_json -}}
        {%- endmacro -%}

        {# macro to output a timedelta in a readable format #}
        {%- macro relative_time_plus(date, parts, week, time, abbr, language, compare_date, verbose) -%}
          {#- set defaults for input if not entered #}
            {%- set date = date | as_datetime if date is string or date is number else date -%}
            {%- set compare_date = compare_date if compare_date is defined else now() -%}
            {%- set compare_date = compare_date | as_datetime if compare_date is string or compare_date is number else compare_date -%}
            {%- set phrases = time_period_phrases -%}
          {#- select correct phrases bases on language input #}
            {%- set language = language | default() -%}
            {%- set languages = phrases | map(attribute='language') | list -%}
            {%- set language = iif(language in languages, language, languages | first) -%}
            {%- set phr = phrases | selectattr('language', 'eq', language) | map(attribute='phrases') | list | first -%}
          {#- check for valid datetime (using as_timestamp) #}
            {%- if as_timestamp(date, default='error') != 'error' -%}
              {%- set date = date | as_local -%}
              {%- set parts = parts | default(1) | int(1) -%}
              {%- set week = week | default(true) | bool(true) -%}
              {%- set time = time | default(true) | bool(true) -%}
              {%- set abbr = abbr | default(false) | bool(false) or verbose | default(false) | bool(false) -%}
              {%- set language = language | default('first') -%}
              {%- set date = date if time else today_at().replace(year=date.year, month=date.month, day=date.day) -%}
              {%- set tp = time_split(date, time, compare_date) | from_json -%}
            {#- create mapping #}
              {%- set wk = tp.w if week else 0 -%}
              {%- set dy = tp.d if week else tp.d + tp.w * 7 -%}
              {%- set dur = dict(
                                  yrs = dict(a=tp.y, d=phr.year[2] if abbr else phr.year[1] if tp.y > 1 else phr.year[0]),
                                  mth = dict(a=tp.mo, d=phr.month[2] if abbr else phr.month[1] if tp.mo > 1 else phr.month[0]),
                                  wks = dict(a=wk, d=phr.week[2] if abbr else phr.week[1] if wk > 1 else phr.week[0]),
                                  day = dict(a=dy, d=phr.day[2] if abbr else phr.day[1] if dy > 1 else phr.day[0]),
                                  hrs = dict(a=tp.h, d=phr.hour[2] if abbr else phr.hour[1] if tp.h > 1 else phr.hour[0]),
                                  min = dict(a=tp.m, d=phr.minute[2] if abbr else phr.minute[1] if tp.m > 1 else phr.minute[0]),
                                  sec = dict(a=tp.s, d=phr.second[2] if abbr else phr.second[1] if tp.s > 1 else phr.second[0])
                                )
              -%}
            {#- find first non zero time period #}
              {%- set first = dur.items() | rejectattr('1.a', 'eq', 0) | map(attribute='0') | first -%}
            {#- set variable to reject weeks if set and find index of first non zero time period #}
              {%- set week_reject = 'wks' if not week -%}
              {%- set index = (dur.keys() | reject('eq', week_reject) | list).index(first) -%}
            {#-select non zero items based on input #}
              {%- set items = (dur.keys() | reject('eq', week_reject) | list)[index:index + parts] -%}
              {%- set selection = dur.items() | selectattr('0', 'in', items) | rejectattr('1.a', 'eq', 0) | list -%}
            {#- create list of texts per selected time period #}
              {%- set ns = namespace(text = []) -%}
              {%- for i in selection -%}
                {%- set ns.text = ns.text + [ i[1].a ~ ' ' ~ i[1].d] -%} 
              {%- endfor -%}
            {#- join texts in a string, using phr.combine for the last item #}
              {{- ns.text[:-1] | join(', ') ~ phr.combine ~ ns.text[-1] if ns.text | count > 1 else ns.text | first -}}
            {%- else -%}
              {{- phr.error -}}
            {%- endif -%}
        {%- endmacro -%}              
        {%- macro event_to_dict(event) %}
          {%- set now_ts = now() | as_timestamp -%}
          {%- set start_ts = event.start | as_timestamp | int %}
          {%- set end_ts = event.end | as_timestamp | int %}
          {%- set rel_start = relative_time_plus(event.start,2) %}
          {%- set rel_end = relative_time_plus(event.end,2) %}
          {%- set has_started = iif(now_ts > start_ts,1,0) -%}
          {%- set has_ended = iif(now_ts > end_ts,1,0) -%}
          {%- set start_min = ((start_ts - now_ts) / 60) | int -%}
          {%- set end_min = ((end_ts - now_ts) / 60 ) | int -%}
          {%- set starts_in_1 = iif((0 < start_min) and (start_min <= 1),1,0) -%}
          {%- set starts_in_5 = iif((0 < start_min) and (start_min <= 5),1,0) -%}
          {%- set starts_in_10 = iif((0 < start_min) and (start_min <= 10),1,0) -%}
          {
             "summary": "{{event.summary}}"
             ,"location":{{ ((event.location | replace('\n', ' ')) | to_json)}} 
             ,"start_ts":{{start_ts}}
             ,"end_ts":{{end_ts}}
             ,"rel_start":"{{rel_start}}"
             ,"rel_end":"{{rel_end}}"
             ,"has_started":{{has_started}}
             ,"has_ended":{{has_ended}}
             ,"start_min":{{ start_min}}
             ,"end_min":{{ end_min}}

            ,"starts_in_1": {{starts_in_1}}
            ,"starts_in_5": {{starts_in_5}}
            ,"starts_in_10": {{starts_in_10}}

          }
        {%- endmacro %}
        {%- set ns = namespace(parsed_events=[]) %}
        {%- for event in cal_events[calendar].events %}
        {%- set e_dict = event_to_dict(event) %}

        {%- set ns.parsed_events = ns.parsed_events + [ (e_dict | from_json )] %}
        {%- endfor -%}
        {{ns.parsed_events | sort(attribute='start_ts')}}
      locations: >-
        {%- set ns = namespace(locations=[]) %}        
        {%- for event in cal_events[calendar].events %}
          {% set loc = {"locations": ((event.location | replace('\n', ' ')) | to_json) } %}
          {%- set ns.locations = ns.locations + [loc] + [loc] %}
        {%- endfor -%}
        {{ns.locations}}

      current_events: >-
        {%- set ns = namespace(current_events=[]) %}
          {%- for event in event_list  %}
          
            {%- if event['start_min'] <= 0 %}
              {%- set ns.current_events = ns.current_events + [ event ] %}
            {%- endif %}
        {%- endfor -%}
        {{ns.current_events}}
      current_events_count: "{{current_events | length }}"
      current_events_text: "{{ current_events | map(attribute='summary') | join(' / ') }}"
      future_events: >-
        {%- set ns = namespace(future_events=[]) %}
          {%- for event in event_list  %}
          
            {%- if event['start_min'] > 0 %}
              {%- set ns.future_events = ns.future_events + [ event ] %}
            {%- endif %}
        {%- endfor -%}
        {{ns.future_events}}
      future_events_count: "{{future_events | length }}"
      next_events: >-
        {%- if future_events_count > 1 %}
        {%- set next_event_start_ts = future_events[0]['start_ts'] -%}
        {%- set ns = namespace(next_events=[]) %}
          {%- for event in event_list  %}
          
            {%- if event['start_ts'] == next_event_start_ts %}
              {%- set ns.next_events = ns.next_events + [ event ] %}
            {%- endif %}
        {%- endfor -%}
        {{ns.next_events}}
        {%- else %}
        []
        {%- endif%}
      next_events_count: "{{ next_events | length }}"
      next_events_text: "{{ next_events | map(attribute='summary') | join(' / ') }}"
      next_events_text_payload: >-
        {%- set join_str = '", "c":' ~ next_meeting_text_color ~'},{"t":"/", "c":' ~ next_meeting_separator_color ~'}, {"t":"' %}        
        {{'{"t":"' ~ (next_events | map(attribute='summary') | join(join_str)) ~ '", "c":' ~ next_meeting_text_color ~'}' }}
      next_meeting_time_text: >-
        {%- if next_events_count > 0 -%}
        {%- set min = (next_events[0].start_min | float) -%}
        {%- set hr = (min / 60) | float | round(1) -%}
          {%- if min > 60 -%}
          {{hr | replace('.0','')}}{{hour_suffix}}
          {%- else -%}
          {{min | replace('.0','')}}{{min_suffix}}
          {%- endif -%}
        {%- endif -%}
      next_events_payload: >-
        {%- if next_events_count > 0 %}
          {%- set min_text = next_events[0].start_min ~ 'min ' %}
          {"text": [
            {"t": "{{next_meeting_time_text}}", "c": {{next_meeting_time_color}}},
            {{next_events_text_payload}}            
          ],
          "lifetime":30}
        {%- else %}
        {}
        {%- endif %}
      event_payload: >-
        { "current_events":{{current_events}}
          ,"current_events_count":{{current_events_count}}
          ,"next_events":{{next_events}}
          ,"next_events_count":{{next_events_count}}
          ,"future_events":{{future_events}}
          ,"future_events_count":{{future_events_count}}
          ,"events":{{event_list}}
        }
      indicator_color_blink: >-
        {% macro get_color_blink(data) %}
          {%- if data['current_events_count'] > 0 -%}
            {'debug': 'active', 'color':{{color_active}}, 'blink': {{blink_active}}, 'fade': {{fade_active}}}
          {%- elif data['next_events_count'] > 0 -%}            
            {%- if data['next_events'][0]['starts_in_1'] -%}
              {'debug': '1 min', 'color':{{color_1_min_warning}}, 'blink': {{blink_1_min_warning}}, 'fade': {{fade_1_min_warning}}}
            {%- elif data['next_events'][0]['starts_in_5'] -%}
              {'debug': '5 min', 'color':{{color_5_min_warning}}, 'blink': {{blink_5_min_warning}}, 'fade': {{fade_5_min_warning}}}
            {%- elif data['next_events'][0]['starts_in_10'] -%}
              {'debug': '10 min', 'color':{{color_10_min_warning}}, 'blink': {{blink_10_min_warning}}, 'fade': {{fade_10_min_warning}}}
            {%- else -%}
              {'debug': 'none', 'color':[0,0,0], 'blink':0, 'fade':0}
            {% endif %}          
          {%- else -%}
            {'debug': 'none', 'color':[0,0,0], 'blink':0, 'fade':0}
          {%- endif -%}
        {% endmacro -%}
        {{ get_color_blink(event_payload)}}

      sound_payload_dev: >-
        {{trigger.id}}
      sound_payload: >-
        {%- if trigger.id != 'temporal' %}
          {{sound_dict[trigger.id]}}
        {%- endif %}

  - repeat:
      for_each: "{{devices_topics}}"
      sequence:
        - service: mqtt.publish
          data:
            qos: 0
            retain: false
            topic: "{{repeat.item}}"
            payload: >-
              {
                "color": {{indicator_color_blink['color']}}
                ,"blink":{{indicator_color_blink['blink']}}
                ,"fade":{{indicator_color_blink['fade']}}
              }
  - if:
      - condition: template
        value_template: "{{show_next_meeting}}"
    then:
      - repeat:
          for_each: "{{next_meeting_topics}}"
          sequence:
            - service: mqtt.publish
              data:
                qos: 0
                retain: false
                topic: "{{repeat.item}}"
                payload: >-
                  {{next_events_payload}}
  - if:
      - condition: template
        value_template: "{{sound_payload != ''}}"
    then:
      - repeat:
          for_each: "{{sound_topics}}"
          sequence:
            - service: mqtt.publish
              data:
                qos: 0
                retain: false
                topic: "{{repeat.item}}"
                payload: >-
                  {{sound_payload}}

  - if:
      - condition: template
        value_template: "{{trigger.id != 'temporal'}}"
    then:
      - service: mqtt.publish
        data:
          qos: 0
          topic: dev-test
          payload: >-
            {%- set idx = trigger.id %}
            {{sound_dict[idx]}} {{sound_dict}}
